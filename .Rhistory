x <- 64.32.211.8
64.134.66.36
69.27.229.11
38.126.140.251
172.56.38.93
98.169.45.83
152.131.10.71
12.165.85.186
74.102.50.52
172.10.246.88
70.194.3.213
24.136.235.177
66.87.153.168
50.133.131.144
135.23.156.46
141.214.17.232
163.246.172.10
156.40.136.34
156.111.116.202
68.118.161.140
216.59.117.18
152.16.52.116
152.132.8.197
157.93.242.50
139.137.128.43
24.157.34.15
152.130.7.3
67.174.180.113
174.44.89.134
setwd("./Documents")
getwd()
ls()
data <- read.csv("Report.csv")
View(data)
ip <- data$IP.Address
unique(ip)
length(data$IP.Address)
length(unique(ip))
?lm
q()
?pnorm
require(graphics)
dnorm(0) == 1/sqrt(2*pi)
par(mfrow=c(2,1))
plot(function(x) dnorm(x, log = TRUE), -60, 50, main = "log {Normal density}")
curve(log(dnorm(x)), add = TRUE, col = "red", lwd = 2)
mtext("dnorm(x, log=TRUE)", adj = 0)
mtext("log(dnorm(x))", col = "red", adj = 1)
plot(function(x) pnorm(x, log.p = TRUE), -50, 10,
main = "log { Normal Cumulative }")
curve(log(pnorm(x)), add = TRUE, col = "red", lwd = 2)
mtext("pnorm(x, log=TRUE)", adj = 0)
mtext("log(pnorm(x))", col = "red", adj = 1)
x <- rnorm(100)
x
plot(x)
setwd("./RepData_PeerAssessment1")
data <- read.csv("activity.csv")
activityInterval <- aggregate(data$steps ~ data$interval, data = data, FUN = mean)
names(activityInterval) <- c("interval", "avgSteps")
newdata <- merge(data, activityInterval, by = "interval")
for(i in 1:length(newdata$steps)) {
if(is.na(newdata[i,2])) {
newdata[i,2] <- newdata[i,4]
}
}
totSteps2 <- aggregate(newdata$steps ~ newdata$date, data = newdata, FUN = sum)
names(totSteps2) <- c("date", "steps")
View(totSteps2)
?count
newdata$dayType <- c("weekday")
weekend <- weekdays(as.Date(newdata$date)) %in% c("Saturday", "Sunday")
newdata$datType[weekend == TRUE] <- "weekend"
newdata$dayType <- as.factor(newdata$dayType)
View(newdata)
newdata$dayType <- c("weekday")
weekend <- weekdays(as.Date(newdata$date)) %in% c("Saturday", "Sunday")
newdata$dayType[weekend == TRUE] <- "weekend"
newdata$dayType <- as.factor(newdata$dayType)
View(newdata)
avgStepsWeek <- aggregate(steps ~ interval + dayType, data = newdata, FUN = mean)
ggplot(avgStepsWeek, aes(interval, steps)) + geom_line() + facet_grid(dayType~.) + xlab("5 min interval") + ylab("Number of steps")
library(ggplot2)
ggplot(avgStepsWeek, aes(interval, steps)) + geom_line() + facet_grid(dayType~.) + xlab("5 min interval") + ylab("Number of steps")
